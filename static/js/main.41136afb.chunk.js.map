{"version":3,"sources":["ToDoLists.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoLists","props","className","onClick","onSelect","id","text","App","useState","inputList","setInputList","item","setItem","deleteItems","console","log","oldItems","filter","arrElem","index","type","placeholder","onChange","event","target","value","map","itemval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAiBgBA,EAjBE,SAACC,GAIf,OACA,mCACI,sBAAKC,UAAU,cAAf,UACA,wBAAQC,QAAS,WAEbF,EAAMG,SAASH,EAAMI,KAFzB,eAIA,6BAAMJ,EAAMK,aCsDLC,EA7DL,WAER,MAA+BC,mBAAS,IAAxC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,EAAqBF,mBAAS,IAA9B,mBAAOG,EAAP,KAAYC,EAAZ,KAeMC,EAAc,SAACR,GAEfS,QAAQC,IAAI,WACZH,GAAQ,SAACI,GACP,OAAOA,EAASC,QAAO,SAACC,EAAQC,GAC9B,OAAOA,IAAQd,SAKzB,OACE,mCACA,qBAAKH,UAAU,WAAf,SACE,sBAAKA,UAAU,aAAf,UACE,uBACA,4CACA,uBACA,uBAAOkB,KAAK,OAAOC,YAAY,aAC/BC,SAhCW,SAACC,GAEhBb,EAAaa,EAAMC,OAAOC,QA+BtBA,MAAOhB,IACP,wBAAQN,QA3BK,WACjBS,GAAQ,SAACI,GACP,MAAM,GAAN,mBAAUA,GAAV,CAAmBP,OAGrBC,EAAa,KAsBT,eACA,6BACGC,EAAKe,KAAI,SAACC,EAAQR,GAEjB,OAAO,cAAC,EAAD,CAAWb,KAAMqB,EAExBtB,GAAIc,EACJf,SAAUS,GAFLM,gBCpCFS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.41136afb.chunk.js","sourcesContent":["const ToDoLists = (props) =>\r\n\r\n{\r\n    \r\n    return (\r\n    <>\r\n        <div className=\"todo_styles\">\r\n        <button onClick={()=>\r\n        {\r\n            props.onSelect(props.id);\r\n        }}>x</button>\r\n        <li >{props.text}</li>\r\n        </div>\r\n    </>\r\n    \r\n    );\r\n}\r\nexport  default ToDoLists;","import React , {useState} from 'react';\nimport './App.css';\nimport ToDoLists from './ToDoLists';\n\nconst App=() => {\n  //created hook element\n  const [inputList,setInputList]=useState(\"\");\n  // created hook of arry\n  const [item,setItem]=useState([]);\n  const itemEvent= (event) =>{\n    \n    setInputList(event.target.value);\n    \n  };\n\n  // spread data \n  const listOfItem = ()=>{\n    setItem((oldItems)=>{\n      return[...oldItems,inputList];\n\n    });\n    setInputList('');\n  };\n  const deleteItems = (id)=>\n  {\n        console.log(\"deleted\");\n        setItem((oldItems)=>{\n          return oldItems.filter((arrElem,index)=>{\n            return index!==id\n\n          });\n        });\n    };\n  return (\n    <>\n    <div className=\"main-div\">\n      <div className=\"center-div\">\n        <br/>\n        <h1>To Do List</h1>\n        <br/>\n        <input type=\"text\" placeholder=\"Add a item\" \n        onChange={itemEvent}\n        value={inputList}/>\n        <button onClick={listOfItem}>X</button>\n        <ol>\n          {item.map((itemval,index)=>\n          {\n            return <ToDoLists text={itemval}\n            key={index}\n            id={index}\n            onSelect={deleteItems}/>\n\n          })\n          }\n        </ol>\n        \n\n      </div>\n        \n      \n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}